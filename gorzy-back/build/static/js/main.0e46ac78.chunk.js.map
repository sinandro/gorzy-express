{"version":3,"sources":["components/layout/TopNav.jsx","Helper.js","modules/pre/index.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["Component","useState","activeKey","setActiveKey","Navbar","className","Header","href","Body","Nav","onSelect","eventKey","Item","icon","Icon","Dropdown","title","axios","require","server","apiCall","param","a","user","getOfflineToken","method","url","data","params","withCredentials","headers","formData","Authorization","token","onUploadProgress","response","console","log","message","status","localStorage","removeItem","getItem","JSON","parse","Page","useEffect","App","TopNav","exact","path","component","Index","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"6SAwCeA,EArCG,WAAO,IAAD,EACYC,mBAAS,MADrB,mBACfC,EADe,KACJC,EADI,KAGtB,OACE,kBAACC,EAAA,EAAD,CAAQC,UAAU,aAChB,yBAAKA,UAAU,oBACb,kBAACD,EAAA,EAAOE,OAAR,CAAeD,UAAU,WACvB,wBAAIA,UAAU,gBACZ,uBAAGE,KAAK,IAAIF,UAAU,eAAtB,8BAMJ,kBAACD,EAAA,EAAOI,KAAR,CAAaH,UAAU,iCACrB,kBAACI,EAAA,EAAD,CAAKJ,UAAU,UAAUK,SAAU,SAAAC,GAAQ,OAAIR,EAAaQ,IAAWT,UAAWA,GAChF,kBAACO,EAAA,EAAIG,KAAL,CAAUD,SAAS,IAAIE,KAAM,kBAACC,EAAA,EAAD,CAAMD,KAAK,UAAxC,QAGA,kBAACJ,EAAA,EAAIG,KAAL,CAAUD,SAAS,KAAnB,QACA,kBAACF,EAAA,EAAIG,KAAL,CAAUD,SAAS,KAAnB,YACA,kBAACI,EAAA,EAAD,CAAUC,MAAM,SACd,kBAACD,EAAA,EAASH,KAAV,CAAeD,SAAS,KAAxB,WACA,kBAACI,EAAA,EAASH,KAAV,CAAeD,SAAS,KAAxB,QACA,kBAACI,EAAA,EAASH,KAAV,CAAeD,SAAS,KAAxB,aAIJ,kBAACF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAIG,KAAL,CAAUC,KAAM,kBAACC,EAAA,EAAD,CAAMT,UAAU,WAAWQ,KAAK,SAAhD,mD,yBC9BNI,EAAQC,EAAQ,KAITC,EAAS,wBAYf,SAAeC,EAAtB,kC,4CAAO,WAAuBC,GAAvB,iBAAAC,EAAA,6DAECC,EAAOC,IAFR,kBAIoBP,EAAM,CAC3BQ,OAAQJ,EAAMI,OACdC,IAAKP,EAAS,OAASE,EAAMK,IAC7BC,KAAMN,EAAMM,KACZC,OAAQP,EAAMO,OACdC,iBAAiB,EACjBC,QAAS,CACP,eAAgBT,EAAMU,SAAW,sBAAwB,mBACzDC,cAAgBT,EAAc,SAAWA,EAAKU,MAAvB,MAEzBC,iBAAkBb,EAAMa,iBAAmBb,EAAMa,iBAAmB,KAdnE,cAIGC,EAJH,yBAqBIA,GArBJ,mCAuBHC,QAAQC,IAAI,KAAGC,SACfF,QAAQC,IAAI,KAAGF,WAEb,KAAGA,UACqB,MAAvB,KAAGA,SAASI,QAAyC,MAAvB,KAAGJ,SAASI,OA3B1C,wBA8BDC,aAAaC,WAAW,QA9BvB,kBAmCM,MAnCN,iCAqCI,KAAGN,UArCP,0D,sBA4GA,IAAMX,EAAkB,WAE7B,QADsC,qBAAjBgB,eAAgCA,aAAaE,QAAQ,UAEjEC,KAAKC,MAA8B,qBAAjBJ,cAAgCA,aAAaE,QAAQ,UC9HlF,IASeG,EATF,WAMX,OAJAC,qBAAU,WACR1B,EAAQ,CAAEM,IAAK,OACd,IAEK,qCCiBKqB,MAhBf,WACE,OACE,yBAAK1C,UAAU,OACb,kBAAC2C,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,QCJvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlC,QAAQkC,MAAMA,EAAMhC,c","file":"static/js/main.0e46ac78.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Navbar, Nav, Icon, Dropdown } from 'rsuite'\n\nconst Component = () => {\n  const [activeKey, setActiveKey] = useState(null)\n\n  return (\n    <Navbar className=\"shadow-sm\">\n      <div className=\"container flexed\">\n        <Navbar.Header className=\"unfloat\">\n          <h1 className=\"font-16 bold\">\n            <a href=\"/\" className=\"p-3 blocked\">\n              گرزی\n            </a>\n          </h1>\n        </Navbar.Header>\n\n        <Navbar.Body className=\"flex-1 flexed justify-between\">\n          <Nav className=\"unfloat\" onSelect={eventKey => setActiveKey(eventKey)} activeKey={activeKey}>\n            <Nav.Item eventKey=\"1\" icon={<Icon icon=\"home\" />}>\n              Home\n          </Nav.Item>\n            <Nav.Item eventKey=\"2\">News</Nav.Item>\n            <Nav.Item eventKey=\"3\">Products</Nav.Item>\n            <Dropdown title=\"About\">\n              <Dropdown.Item eventKey=\"4\">Company</Dropdown.Item>\n              <Dropdown.Item eventKey=\"5\">Team</Dropdown.Item>\n              <Dropdown.Item eventKey=\"6\">Contact</Dropdown.Item>\n            </Dropdown>\n          </Nav>\n\n          <Nav>\n            <Nav.Item icon={<Icon className=\"m-0 ml-1\" icon=\"cog\" />}>تنظیمات</Nav.Item>\n          </Nav>\n        </Navbar.Body>\n      </div>\n    </Navbar>\n  )\n}\n\nexport default Component","// import { navigate } from 'gatsby'\n// import { toast } from 'react-toastify'\nconst axios = require(\"axios\")\n\n// ـ\n\nexport const server = \"http://127.0.0.1:3669\";\n\nexport const url_base = 'http://digimaliat.ir'\n// export const url_base = 'http://foroshman.ir'\n// export const url_base = 'http://46.245.38.205'\n// export const url_base = 'http://192.168.1.26'\n// export const url_base = \"http://185.94.97.170\";\nexport const videoExtensions = ['mp4', 'avi', 'mkv']\nexport const textExtensions = ['txt', 'pdf', 'docx', 'xlsx']\nexport const audioExtensions = ['mp3']\nexport const imageExtensions = ['jpg', 'jpeg', 'png']\n\nexport async function apiCall(param) {\n  // const user = store.get(\"user\");\n  const user = getOfflineToken();\n  try {\n    const response = await axios({\n      method: param.method,\n      url: server + '/api' + param.url,\n      data: param.data,\n      params: param.params,\n      withCredentials: true,\n      headers: {\n        \"Content-Type\": param.formData ? 'multipart/form-data' : 'application/json',\n        Authorization: !user ? null : \"Token \" + user.token\n      },\n      onUploadProgress: param.onUploadProgress ? param.onUploadProgress : ''\n    });\n\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n      console.log(response, param.url);\n    }\n\n    return response;\n  } catch (ex) {\n    console.log(ex.message);\n    console.log(ex.response);\n    if (\n      ex.response &&\n      (ex.response.status === 401 || ex.response.status === 403)\n    ) {\n      // if (param.url.indexOf('validToken') > -1) {\n      localStorage.removeItem('user')\n      // // // // // // navigate('/user/login')\n      // }\n      // } else\n      //   history.push(\"/unauthorized\");\n      return null;\n    }\n    return ex.response;\n  }\n}\n\nexport function toPersianDigit(a) {\n  if (a || a === 0 || a === '0') {\n    if (typeof (a) === 'number')\n      a = String(a)\n    return a.replace(/\\d+/g, function (digit) {\n      var enDigitArr = [], peDigitArr = [];\n      for (var i = 0; i < digit.length; i++) { enDigitArr.push(digit.charCodeAt(i)); }\n      for (var j = 0; j < enDigitArr.length; j++) { peDigitArr.push(String.fromCharCode(enDigitArr[j] + ((!!a && a == true) ? 1584 : 1728))); }\n      return peDigitArr.join('');\n    })\n  } else {\n    return a\n  }\n};\n\nexport function toEnDigit(a) {\n  var\n    persianNumbers = [/۰/g, /۱/g, /۲/g, /۳/g, /۴/g, /۵/g, /۶/g, /۷/g, /۸/g, /۹/g],\n    arabicNumbers = [/٠/g, /١/g, /٢/g, /٣/g, /٤/g, /٥/g, /٦/g, /٧/g, /٨/g, /٩/g],\n    fixNumbers = function (str) {\n      if (typeof str === 'string') {\n        for (var i = 0; i < 10; i++) {\n          str = str.replace(persianNumbers[i], i).replace(arabicNumbers[i], i);\n        }\n      }\n      return str;\n    }\n  return fixNumbers(a)\n}\n\nexport function getExtension(s) {\n  if (s) s = s.toLowerCase()\n  if (s) {\n    if (s.lastIndexOf('.') > -1) {\n      return s.slice(s.lastIndexOf('.') + 1, s.length)\n    } else return ''\n  } else return ''\n};\n\nexport function validateToken(force, noNavigate) {\n  let user = getOfflineToken()\n  if (user) {\n    apiCall({\n      url: '/validToken'\n    }).then(res => {\n      if (res && res.data && res.data.code === 0) {\n        if (force)\n          typeof window !== 'undefined' && window.location.replace(force)\n      } else {\n        !noNavigate && typeof window !== 'undefined' && window.location.replace('/user/login')\n      }\n    })\n  } else {\n    !noNavigate && typeof window !== 'undefined' && window.location.replace('/user/login')\n    return false\n  }\n}\n\nexport function logout() {\n  apiCall({\n    url: '/user/userLogout'\n  }).then(res => {\n    typeof localStorage !== 'undefined' && localStorage.removeItem('user')\n    setTimeout(window.location.href = '/user/login', 500)\n  })\n}\n\nexport const getOfflineToken = () => {\n  let storage = typeof localStorage !== 'undefined' && localStorage.getItem('user')\n  if (storage)\n    return JSON.parse(typeof localStorage !== 'undefined' && localStorage.getItem('user'))\n  return false\n}\n\nexport const detectStatus = status => {\n  switch (status) {\n    case 0:\n      return 'بسته شده'\n    case 1:\n      return 'منتظر پاسخ'\n    case 2:\n      return 'پاسخ داده شده'\n    default:\n      return ''\n  }\n}\n\nexport const detectMonth = month => {\n  switch (month) {\n    case 1:\n      return 'فروردین'\n    case 2:\n      return 'اردیبهشت'\n    case 3:\n      return 'خرداد'\n    case 4:\n      return 'تیر'\n    case 5:\n      return 'مرداد'\n    case 6:\n      return 'شهریور'\n    case 7:\n      return 'مهر'\n    case 8:\n      return 'آبان'\n    case 9:\n      return 'آذر'\n    case 10:\n      return 'دی'\n    case 11:\n      return 'بهمن'\n    case 12:\n      return 'اسفند'\n    default:\n      return ''\n  }\n}\n\nexport const detectPriority = priority => {\n  switch (priority) {\n    case 0:\n      return 'کم'\n    case 1:\n      return 'متوسط'\n    case 2:\n      return 'زیاد'\n    default:\n      return ''\n  }\n}\n\nexport const detectTodoStatus = status => {\n  switch (status) {\n    case 1:\n      return 'منتظر'\n    case 2:\n      return 'انجام شده'\n    case 3:\n      return 'فراموش شده'\n    default:\n      return ''\n  }\n}\n\nexport const detectDifficulty = difficulty => {\n  switch (difficulty) {\n    case 1:\n      return 'آسان'\n    case 2:\n      return 'متوسط'\n    case 3:\n      return 'سخت'\n    default:\n      return ''\n  }\n}\n\nexport const detectExamStatus = (percent, pass_percent) => percent >= pass_percent\n\nexport const detectHintName = id => {\n  switch (id) {\n    case 1:\n      return 'کتابخانه'\n    case 2:\n      return 'آزمون'\n    case 3:\n      return 'درخواست ها'\n    case 4:\n      return 'فروشگاه'\n    case 5:\n      return 'اتاق گفتگو'\n    case 6:\n      return 'فایل ها'\n    case 7:\n      return 'پرسش و پاسخ'\n    case 8:\n      return 'کتابخانه من'\n    case 9:\n      return 'اخبار'\n    case 10:\n      return 'یادداشت ها'\n    case 11:\n      return 'تقویم مالیاتی'\n    case 12:\n      return 'اظهارنظر فنی'\n    case 13:\n      return 'گنجینه'\n    case 14:\n      return 'لایحه'\n    case 15:\n      return 'ثبت نام'\n    case 16:\n      return 'بخشنامه'\n    default:\n      return ''\n  }\n}\n\nexport function makePrint(text, characterCount) {\n  let pageNo = Math.ceil(text.length / characterCount);\n  let container = document.createElement(\"div\");\n  for (let i = 0; i < pageNo; i++) {\n    let div = document.createElement(\"div\");\n    let divText = document.createTextNode(text.substring(i * characterCount, (i + 1) * characterCount));\n\n    div.appendChild(divText);\n    div.id = 'page';\n    let p = document.createElement(\"p\");\n    p.setAttribute(\"class\", \"page-counter\")\n    let pText = document.createTextNode(`صفحه ${toPersianDigit(i + 1)} از ${toPersianDigit(pageNo)}`);\n    p.appendChild(pText);\n    div.appendChild(p);\n    container.appendChild(div);\n  }\n  return container\n  // document.getElementById('body').appendChild(container);\n}\n\nexport function validateEmail(mail) {\n  if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail)) {\n    return (true)\n  }\n  return (false)\n}\n\nexport function getOS() {\n  var userAgent = window.navigator.userAgent,\n    platform = window.navigator.platform,\n    macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n    windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n    iosPlatforms = ['iPhone', 'iPad', 'iPod'],\n    os = null;\n\n  if (macosPlatforms.indexOf(platform) !== -1) {\n    os = 'Mac OS';\n  } else if (iosPlatforms.indexOf(platform) !== -1) {\n    os = 'iOS';\n  } else if (windowsPlatforms.indexOf(platform) !== -1) {\n    os = 'Windows';\n  } else if (/Android/.test(userAgent)) {\n    os = 'Android';\n  } else if (!os && /Linux/.test(platform)) {\n    os = 'Linux';\n  }\n\n  return os;\n}\n\nexport function getOSId() {\n  const oss = ['Linux', 'Windows', 'Mac OS', 'iOS', 'Android'];\n  const os = getOS();\n  if (os) {\n    const id = oss.indexOf(os);\n    if (id > -1) return id + 1;\n    else return null\n  }\n  else return null;\n}\n\nexport function getPlatform() {\n  var platform = null;\n  const userAgent = window.navigator.userAgent;\n\n  if (/Android/.test(userAgent)) {\n    platform = 'android';\n  }\n  else if (/iPhone/.test(userAgent) || /iPad/.test(userAgent) || /iPod/.test(userAgent)) {\n    platform = 'ios';\n  }\n  else if (/Linux/.test(userAgent)) {\n    platform = 'linux';\n  }\n  else {\n    platform = 'windows';\n  }\n\n  return platform;\n}\n\nexport function getBrowser() {\n  var ua = navigator.userAgent, tem,\n    M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];\n  if (/trident/i.test(M[1])) {\n    tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n    return { name: 'IE', version: (tem[1] || '') };\n  }\n  if (M[1] === 'Chrome') {\n    tem = ua.match(/\\b(OPR|Edge)\\/(\\d+)/);\n    if (tem != null) return { name: tem[1].replace('OPR', 'Opera'), version: tem[2] };\n  }\n  M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];\n  if ((tem = ua.match(/version\\/(\\d+)/i)) != null)\n    M.splice(1, 1, tem[1]);\n  return { name: M[0], version: M[1] };\n}\n\nexport function getBrowserInfo() {\n  const browsers = ['Chrome', 'Opera', 'Firefox', 'Edge', 'Safari'];\n  const browser = getBrowser();\n  if (browser) {\n    const id = browsers.indexOf(browser.name);\n    if (id > -1) return { id: id + 1, version: browser.version };\n    else return null;\n  }\n  else return null;\n}\n\nexport function getUnique() {\n  let unique = typeof localStorage !== 'undefined' && localStorage.getItem('unique')\n\n  if (!unique) {\n    unique = new Date().getTime()\n    typeof localStorage !== 'undefined' && localStorage.setItem('unique', unique)\n  }\n\n  return unique\n}\n\nexport async function appStat() {\n  console.log(getUnique());\n  console.log(getOSId())\n  console.log(getBrowserInfo())\n  const browser = getBrowserInfo();\n  const _os_id = getOSId();\n  const res = await apiCall({\n    method: 'post',\n    url: '/adminPanel/statistics',\n    data: {\n      u_id: getUnique(),\n      platform_id: 1,// 1:web 2:android 3:ios\n      version: browser ? browser.version : null,\n      browser_id: browser ? browser.id : null,\n      _os_id\n    }\n  })\n}\n\nexport function highlightWords(text, q) {\n  if (text && q) {\n    text = text.toString()\n    const pattern = new RegExp(\"(\" + q + \")\", \"gi\")\n    return text.replace(pattern, \"<span class='bg-tomato-lighter'>\" + q + \"</span>\")\n  } else return text\n}\n\nexport function showNChar(s, n = 32, dots) {\n  let cut = s?.slice(0, n)\n  if (s.length > n) cut = cut + (dots ? '...' : '')\n  return cut\n}\n\nexport function similarity(s1, s2) {\n  var longer = s1;\n  var shorter = s2;\n  if (s1.length < s2.length) {\n    longer = s2;\n    shorter = s1;\n  }\n  var longerLength = longer.length;\n  if (longerLength == 0) {\n    return 1.0;\n  }\n  return (longerLength - editDistance(longer, shorter)) / parseFloat(longerLength);\n}\n\nexport function editDistance(s1, s2) {\n  s1 = s1.toLowerCase();\n  s2 = s2.toLowerCase();\n\n  var costs = new Array();\n  for (var i = 0; i <= s1.length; i++) {\n    var lastValue = i;\n    for (var j = 0; j <= s2.length; j++) {\n      if (i == 0)\n        costs[j] = j;\n      else {\n        if (j > 0) {\n          var newValue = costs[j - 1];\n          if (s1.charAt(i - 1) != s2.charAt(j - 1))\n            newValue = Math.min(Math.min(newValue, lastValue),\n              costs[j]) + 1;\n          costs[j - 1] = lastValue;\n          lastValue = newValue;\n        }\n      }\n    }\n    if (i > 0)\n      costs[s2.length] = lastValue;\n  }\n  return costs[s2.length];\n}\n","import React, { useEffect } from 'react'\nimport { apiCall } from './../../Helper'\n\nconst Page = () => {\n\n  useEffect(() => {\n    apiCall({ url: '' })\n  }, [])\n\n  return (<div>eyy</div>);\n}\n\nexport default Page;\n","import React from 'react'\nimport 'rsuite/dist/styles/rsuite-default.css'\nimport './../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport './assets/styles/styles.css'\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom'\n\nimport TopNav from './components/layout/TopNav'\n\nimport Index from './modules/pre'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TopNav />\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Index} />\n          {/* <Route path=\"/about\">\n            <About />\n          </Route> */}\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}